import React, { useState, useRef } from 'react';
import { View, Text, TextInput, Button, Alert, Image, TouchableOpacity } from 'react-native';

const Setup2FA = () => {
    const [otp, setOtp] = useState(['', '', '', '', '', '']);
    const inputRefs = useRef<(TextInput | null)[]>([]);

    const handleOtpChange = (value: string, index: number) => {
        if (value.length > 1) {
            const pastedValue = value.slice(0, 6).split('');
            const newOtp = [...otp];

            for (let i = 0; i < 6; i++) {
                newOtp[i] = pastedValue[i] || '';
            }

            setOtp(newOtp);
            const lastIndex = Math.min(pastedValue.length, 5);
            if (inputRefs.current[lastIndex]) {
                inputRefs.current[lastIndex]?.focus();
            }
            return;
        }

        const newOtp = [...otp];
        newOtp[index] = value;
        setOtp(newOtp);

        if (value && index < 5) {
            if (inputRefs.current[index + 1]) {
                inputRefs.current[index + 1]?.focus();
            }
        }
    };

    const handleKeyPress = (e: any, index: number) => {
        if (e.nativeEvent.key === 'Backspace') {
            const newOtp = [...otp];

            if (otp[index] === '' && index > 0) {
                newOtp[index - 1] = '';
                setOtp(newOtp);
                if (inputRefs.current[index - 1]) {
                    inputRefs.current[index - 1]?.focus();
                }
            } else {
                newOtp[index] = '';
                setOtp(newOtp);
            }
        }
    };

    const handleSetup = () => {
        const otpValue = otp.join('');
        const mockCode = '123456'; // Replace with your actual logic for verification
        if (otpValue === mockCode) {
            Alert.alert('Success', '2FA setup complete!');
        } else {
            Alert.alert('Error', 'Invalid code. Please try again.');
        }
    };

    return (
        <View className="flex-1 bg-[#07070C] justify-center items-center p-4">
            <Text className="text-2xl font-bold mb-4 text-white">Set Up Two-Factor Authentication</Text>
            <Text className="text-lg mb-2 text-white">Scan the QR code below with your authenticator app:</Text>
            <Image
                source={{ uri: 'https://via.placeholder.com/150' }} // Replace with your QR code generation logic
                style={{ width: 150, height: 150, marginBottom: 16 }}
            />
            <Text className="text-lg mb-2 text-white">Or enter this key manually:</Text>
            <Text className="text-base font-mono mb-4 text-white">ABC123DEF456GHI789</Text>
            <Text className="text-lg mb-2 text-white">Enter the code generated by your app:</Text>
            <View className="flex-row justify-between w-full mb-4 text-white">
                {otp.map((digit, index) => (
                    <View key={index} className="w-14 h-16 bg-[#101115] rounded-lg justify-center items-center">
                        <TextInput
                            ref={ref => {
                                inputRefs.current[index] = ref;
                            }}
                            className="text-black text-3xl font-bold text-center w-full h-full"
                            keyboardType="number-pad"
                            maxLength={1}
                            value={digit}
                            onChangeText={(value) => handleOtpChange(value, index)}
                            onKeyPress={(e) => handleKeyPress(e, index)}
                            selectTextOnFocus
                        />
                    </View>
                ))}
            </View>
            <Button title="Verify & Complete Setup" onPress={handleSetup} />
        </View>
    );
};

export default Setup2FA;
